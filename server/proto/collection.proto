syntax = "proto2";
package Krosbox;

// Proto extractor compiled unit - https://github.com/HearthSim/proto-extractor


// ref: com.ankamagames.krosmoz.collection.protocol.CollectionErrorType
enum CollectionErrorType {
	COLLECTION_SERVICE_EXCEPTION = 0;
	COLLECTION_SERVICE_UNAVAILABLE = 1;
	COLLECTION_INVALID_REQUEST = 2;
	COLLECTION_FIGURE_NOT_OWNED = 3;
	COLLECTION_FIGURE_BOUND = 4;
	COLLECTION_NOT_ENOUTH_FIGURE_OF_TYPE = 5;
	COLLECTION_NOT_ENOUTH_LEVEL = 6;
}

// ref: com.ankamagames.krosmoz.collection.protocol.CollectionData
message CollectionData {
	repeated int32 uncraftable_figures = 1;
}

// ref: com.ankamagames.krosmoz.collection.protocol.CollectionDataMessage
message CollectionDataMessage {
	optional CollectionData collection_data = 1;
}

// ref: com.ankamagames.krosmoz.collection.protocol.CollectionUpdateRequestMessage
message CollectionUpdateRequestMessage {
}

// ref: com.ankamagames.krosmoz.collection.protocol.CraftRequestMessage
message CraftRequestMessage {
	optional int32 player_figure_type_to_create = 1;
}

// ref: com.ankamagames.krosmoz.collection.protocol.CraftResponseMessage
message CraftResponseMessage {
	optional PlayerFigureData crafted_figure = 1;
	optional int32 total_fragment_amount = 2;
	optional CollectionErrorType error = 3;
}

// ref: com.ankamagames.krosmoz.collection.protocol.PlayerFigureCollectionData
message PlayerFigureCollectionData {
	repeated PlayerFigureData figure = 1;
	optional int32 fragments = 2;
}

// ref: com.ankamagames.krosmoz.collection.protocol.PlayerFigureData
message PlayerFigureData {
	optional int64 id = 1;
	optional int32 figure_id = 2;
	optional int32 pedestal_id = 3;
	optional double obtention_date = 4;
	optional bool seen_by_player = 5;
	optional bool bound = 6;
	optional bool is_not_opened = 7;
	optional string from_type = 8;
}

// ref: com.ankamagames.krosmoz.collection.protocol.PlayerFigureIsSeenMessage
message PlayerFigureIsSeenMessage {
	optional int32 player_figure_id = 1;
}

// ref: com.ankamagames.krosmoz.collection.protocol.PlayerInformationMessage
message PlayerInformationMessage {
	optional CollectionErrorType error = 1;
	optional PlayerFigureCollectionData collection = 2;
}

// ref: com.ankamagames.krosmoz.collection.protocol.RecyclingRequestMessage
message RecyclingRequestMessage {
	repeated int64 player_figure_ids_to_destroy = 1;
}

// ref: com.ankamagames.krosmoz.collection.protocol.RecyclingResponseMessage
message RecyclingResponseMessage {
	repeated int64 player_figure_ids_to_destroy = 1;
	optional int32 delta_amount = 2;
	optional CollectionErrorType error = 3;
}

